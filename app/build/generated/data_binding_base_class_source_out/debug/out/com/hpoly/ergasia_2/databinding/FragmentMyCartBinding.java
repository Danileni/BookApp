// Generated by view binder compiler. Do not edit!
package com.hpoly.ergasia_2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hpoly.ergasia_2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMyCartBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView addtocartImg;

  @NonNull
  public final AppCompatButton buyNow;

  @NonNull
  public final ConstraintLayout constraint1;

  @NonNull
  public final ConstraintLayout constraint2;

  @NonNull
  public final ProgressBar progressbarr1;

  @NonNull
  public final RecyclerView recyclerview;

  @NonNull
  public final TextView totalAmount;

  private FragmentMyCartBinding(@NonNull RelativeLayout rootView, @NonNull ImageView addtocartImg,
      @NonNull AppCompatButton buyNow, @NonNull ConstraintLayout constraint1,
      @NonNull ConstraintLayout constraint2, @NonNull ProgressBar progressbarr1,
      @NonNull RecyclerView recyclerview, @NonNull TextView totalAmount) {
    this.rootView = rootView;
    this.addtocartImg = addtocartImg;
    this.buyNow = buyNow;
    this.constraint1 = constraint1;
    this.constraint2 = constraint2;
    this.progressbarr1 = progressbarr1;
    this.recyclerview = recyclerview;
    this.totalAmount = totalAmount;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMyCartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMyCartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_my_cart, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMyCartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addtocart_img;
      ImageView addtocartImg = ViewBindings.findChildViewById(rootView, id);
      if (addtocartImg == null) {
        break missingId;
      }

      id = R.id.buy_now;
      AppCompatButton buyNow = ViewBindings.findChildViewById(rootView, id);
      if (buyNow == null) {
        break missingId;
      }

      id = R.id.constraint1;
      ConstraintLayout constraint1 = ViewBindings.findChildViewById(rootView, id);
      if (constraint1 == null) {
        break missingId;
      }

      id = R.id.constraint2;
      ConstraintLayout constraint2 = ViewBindings.findChildViewById(rootView, id);
      if (constraint2 == null) {
        break missingId;
      }

      id = R.id.progressbarr1;
      ProgressBar progressbarr1 = ViewBindings.findChildViewById(rootView, id);
      if (progressbarr1 == null) {
        break missingId;
      }

      id = R.id.recyclerview;
      RecyclerView recyclerview = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview == null) {
        break missingId;
      }

      id = R.id.total_amount;
      TextView totalAmount = ViewBindings.findChildViewById(rootView, id);
      if (totalAmount == null) {
        break missingId;
      }

      return new FragmentMyCartBinding((RelativeLayout) rootView, addtocartImg, buyNow, constraint1,
          constraint2, progressbarr1, recyclerview, totalAmount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
