// Generated by view binder compiler. Do not edit!
package com.hpoly.ergasia_2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hpoly.ergasia_2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MyBookCartBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView bookName;

  @NonNull
  public final TextView bookPrice;

  @NonNull
  public final TextView currentDate;

  @NonNull
  public final TextView currentTime;

  @NonNull
  public final TextView totalPrice;

  @NonNull
  public final TextView totalQuantity;

  private MyBookCartBinding(@NonNull CardView rootView, @NonNull TextView bookName,
      @NonNull TextView bookPrice, @NonNull TextView currentDate, @NonNull TextView currentTime,
      @NonNull TextView totalPrice, @NonNull TextView totalQuantity) {
    this.rootView = rootView;
    this.bookName = bookName;
    this.bookPrice = bookPrice;
    this.currentDate = currentDate;
    this.currentTime = currentTime;
    this.totalPrice = totalPrice;
    this.totalQuantity = totalQuantity;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MyBookCartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MyBookCartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.my_book_cart, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MyBookCartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.book_name;
      TextView bookName = ViewBindings.findChildViewById(rootView, id);
      if (bookName == null) {
        break missingId;
      }

      id = R.id.book_price;
      TextView bookPrice = ViewBindings.findChildViewById(rootView, id);
      if (bookPrice == null) {
        break missingId;
      }

      id = R.id.current_date;
      TextView currentDate = ViewBindings.findChildViewById(rootView, id);
      if (currentDate == null) {
        break missingId;
      }

      id = R.id.current_time;
      TextView currentTime = ViewBindings.findChildViewById(rootView, id);
      if (currentTime == null) {
        break missingId;
      }

      id = R.id.total_price;
      TextView totalPrice = ViewBindings.findChildViewById(rootView, id);
      if (totalPrice == null) {
        break missingId;
      }

      id = R.id.total_quantity;
      TextView totalQuantity = ViewBindings.findChildViewById(rootView, id);
      if (totalQuantity == null) {
        break missingId;
      }

      return new MyBookCartBinding((CardView) rootView, bookName, bookPrice, currentDate,
          currentTime, totalPrice, totalQuantity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
