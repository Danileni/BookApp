// Generated by view binder compiler. Do not edit!
package com.hpoly.ergasia_2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hpoly.ergasia_2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailedBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView addBook;

  @NonNull
  public final AppCompatButton addToCart;

  @NonNull
  public final TextView detailedDec;

  @NonNull
  public final ImageView detailedImg;

  @NonNull
  public final TextView detailedPrice;

  @NonNull
  public final TextView detailedRating;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final TextView quantity;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final ImageView removeBook;

  @NonNull
  public final TextView stockDb;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final Toolbar toolbar1;

  private ActivityDetailedBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView addBook,
      @NonNull AppCompatButton addToCart, @NonNull TextView detailedDec,
      @NonNull ImageView detailedImg, @NonNull TextView detailedPrice,
      @NonNull TextView detailedRating, @NonNull ImageView imageView3, @NonNull TextView quantity,
      @NonNull RelativeLayout relativeLayout, @NonNull ImageView removeBook,
      @NonNull TextView stockDb, @NonNull TextView textView9, @NonNull Toolbar toolbar1) {
    this.rootView = rootView;
    this.addBook = addBook;
    this.addToCart = addToCart;
    this.detailedDec = detailedDec;
    this.detailedImg = detailedImg;
    this.detailedPrice = detailedPrice;
    this.detailedRating = detailedRating;
    this.imageView3 = imageView3;
    this.quantity = quantity;
    this.relativeLayout = relativeLayout;
    this.removeBook = removeBook;
    this.stockDb = stockDb;
    this.textView9 = textView9;
    this.toolbar1 = toolbar1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detailed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_book;
      ImageView addBook = ViewBindings.findChildViewById(rootView, id);
      if (addBook == null) {
        break missingId;
      }

      id = R.id.add_to_cart;
      AppCompatButton addToCart = ViewBindings.findChildViewById(rootView, id);
      if (addToCart == null) {
        break missingId;
      }

      id = R.id.detailed_dec;
      TextView detailedDec = ViewBindings.findChildViewById(rootView, id);
      if (detailedDec == null) {
        break missingId;
      }

      id = R.id.detailed_img;
      ImageView detailedImg = ViewBindings.findChildViewById(rootView, id);
      if (detailedImg == null) {
        break missingId;
      }

      id = R.id.detailed_price;
      TextView detailedPrice = ViewBindings.findChildViewById(rootView, id);
      if (detailedPrice == null) {
        break missingId;
      }

      id = R.id.detailed_rating;
      TextView detailedRating = ViewBindings.findChildViewById(rootView, id);
      if (detailedRating == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.quantity;
      TextView quantity = ViewBindings.findChildViewById(rootView, id);
      if (quantity == null) {
        break missingId;
      }

      id = R.id.relativeLayout;
      RelativeLayout relativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout == null) {
        break missingId;
      }

      id = R.id.remove_book;
      ImageView removeBook = ViewBindings.findChildViewById(rootView, id);
      if (removeBook == null) {
        break missingId;
      }

      id = R.id.stock_db;
      TextView stockDb = ViewBindings.findChildViewById(rootView, id);
      if (stockDb == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.toolbar1;
      Toolbar toolbar1 = ViewBindings.findChildViewById(rootView, id);
      if (toolbar1 == null) {
        break missingId;
      }

      return new ActivityDetailedBinding((ConstraintLayout) rootView, addBook, addToCart,
          detailedDec, detailedImg, detailedPrice, detailedRating, imageView3, quantity,
          relativeLayout, removeBook, stockDb, textView9, toolbar1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
